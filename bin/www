#!/usr/bin/env node

// Module dependencies.
const app = require('../app')
const debug = require('debug')('wellpath-v2:server')
const http = require('http')
const models = require('../db/models')

// Get port from environment and store in Express.
const port = process.env.PORT || '3000'

// Create HTTP server.
const server = http.createServer(app)

// Create all table if they doesn't exist in database
models.sequelize.sync().then(function() {
  server.listen(port)
  server.on('error', onError)
  server.on('listening', onListening)
})

// Event listener for HTTP server "error" event.
function onError(error) {
  if (error.syscall !== 'listen') throw error

  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

// Event listener for HTTP server "listening" event.
function onListening() {
  var addr = server.address()
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
  debug('Listening on ' + bind)
}
